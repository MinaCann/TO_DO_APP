{"ast":null,"code":"import _toConsumableArray from \"/Users/mumine/Documents/SUMMER JAVA BOOT CAMP/To_Do_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/mumine/Documents/SUMMER JAVA BOOT CAMP/To_Do_App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mumine/Documents/SUMMER JAVA BOOT CAMP/To_Do_App/src/components/App.jsx\";\nimport React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\n/* input, add, list */\n\nfunction App() {\n  var _this = this;\n\n  // creating input text with empty string\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputText = _useState2[0],\n      setInputText = _useState2[1];\n\n  function handleChange(event) {\n    //event.target.value is the LATEST INPUT VALUE\n    var newValue = event.target.value; // console.log(newValue)\n\n    setInputText(newValue);\n  }\n  /*items ARRAY will store all of the To Do items: shopping, walking,..\n  By default there is nothing in the to do list items \n  initial value = []\n  we will use setItems to update the items array\n  We will show each single item insite items array in <li> element*/\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      items = _useState4[0],\n      setItems = _useState4[1]; //1. addItem function is to add the lastest item in the input to teh items array \n  //when user click on Add button\n  //setItems function will be called to add the lastest item in items array\n  //inputText(latest value) will be added items(array that has all items)\n  //2. Also, it will keep all of teh previos items\n  //setItems function hold onto the previous values\n\n\n  function addItem() {\n    setItems(function (prevValue) {\n      console.log(prevValue);\n      return [].concat(_toConsumableArray(prevValue), [inputText]);\n    }); // Clearing the textbox after adding the inputText to the items array\n\n    setInputText(\"\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"To-Do List\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    type: \"text\",\n    value: inputText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, items.map(function (todoItem) {\n    return /*#__PURE__*/React.createElement(ToDoItem, {\n      text: todoItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    });\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mumine/Documents/SUMMER JAVA BOOT CAMP/To_Do_App/src/components/App.jsx"],"names":["React","useState","ToDoItem","App","inputText","setInputText","handleChange","event","newValue","target","value","items","setItems","addItem","prevValue","console","log","map","todoItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb;AACF,kBAAiCF,QAAQ,CAAC,EAAD,CAAzC;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAiBC,YAAjB;;AACA,WAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAC5B;AACA,QAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA9B,CAF4B,CAG5B;;AACAL,IAAAA,YAAY,CAACG,QAAD,CAAZ;AACC;AACD;AACA;AACA;AACA;AACA;;;AACA,mBAAyBP,QAAQ,CAAC,EAAD,CAAjC;AAAA;AAAA,MAAOU,KAAP;AAAA,MAAaC,QAAb,iBAde,CAed;AACA;AACA;AACA;AAEA;AACA;;;AACD,WAASC,OAAT,GAAkB;AAChBD,IAAAA,QAAQ,CAAC,UAAAE,SAAS,EAAI;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,0CAAWA,SAAX,IAAqBV,SAArB;AACC,KAHK,CAAR,CADgB,CAMhB;;AACAC,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;;AACC,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACA,IAAA,QAAQ,EAAEC,YADV;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,KAAK,EAAEF,SAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE;AACA,IAAA,OAAO,EAAES,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CALF,CAJF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGF,KAAK,CAACM,GAAN,CAAU,UAACC,QAAD,EAAa;AACvB,wBAAO,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFC,CAFH,CADF,CAdF,CADF;AA0BD;;AACD,eAAef,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\n/* input, add, list */\nfunction App() {\n  // creating input text with empty string\nconst [inputText,setInputText] = useState(\"\");\nfunction handleChange(event){\n//event.target.value is the LATEST INPUT VALUE\nconst newValue = event.target.value\n// console.log(newValue)\nsetInputText(newValue)\n}\n/*items ARRAY will store all of the To Do items: shopping, walking,..\nBy default there is nothing in the to do list items \ninitial value = []\nwe will use setItems to update the items array\nWe will show each single item insite items array in <li> element*/\nconst [items,setItems] = useState([]);\n //1. addItem function is to add the lastest item in the input to teh items array \n //when user click on Add button\n //setItems function will be called to add the lastest item in items array\n //inputText(latest value) will be added items(array that has all items)\n \n //2. Also, it will keep all of teh previos items\n //setItems function hold onto the previous values\nfunction addItem(){\n  setItems(prevValue => {\n    console.log(prevValue)\n    return [...prevValue,inputText ]  \n    }\n  )\n  // Clearing the textbox after adding the inputText to the items array\n  setInputText(\"\")\n}\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input \n        onChange={handleChange}\n        type=\"text\" \n        value={inputText}/>\n        <button \n        onClick={addItem}>\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>\n         {\n           items.map((todoItem)=> {\n           return <ToDoItem text={todoItem}/>\n         }\n         )}\n        </ul>\n      </div>\n    </div>\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}